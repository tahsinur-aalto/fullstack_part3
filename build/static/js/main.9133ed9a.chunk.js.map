{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["PersonForm","addPerson","newName","newNumber","handlePersonChange","handleNumberChange","onSubmit","value","onChange","type","Persons","persons","removePerson","map","person","name","number","onClick","id","Filter","searchField","handleChange","Notification","message","console","log","className","baseUrl","exportObj","getAll","axios","get","then","response","data","create","newObject","post","update","put","remove","delete","App","useState","setPersons","setNewName","setNewNumber","setSearchField","setMessage","messageType","setMessageType","useEffect","personService","personsData","catch","error","processMessage","msg","msgType","errorMessage","setTimeout","filteredPersons","filter","toLowerCase","includes","updatePerson","updatedPerson","index","personObj","window","confirm","returnedPerson","p","event","target","preventDefault","personObject","length","indexOf","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9133ed9a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = ({addPerson, newName, newNumber, handlePersonChange, handleNumberChange}) => {\r\n    \r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n            name: <input value={newName} onChange={handlePersonChange} />\r\n            </div>\r\n            <div>\r\n            number: <input value={newNumber} onChange={handleNumberChange} />\r\n            </div>\r\n            <div>\r\n            <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({persons, removePerson}) => {\r\n    \r\n      return persons.map(person => \r\n        <div key={person.id}>\r\n          {person.name} {person.number} \r\n          <button onClick={() => removePerson(person.id, person.name)}>\r\n            delete\r\n          </button>\r\n        </div>\r\n      )\r\n}\r\n\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({searchField, handleChange}) => {\r\n    return (\r\n        <form>\r\n            <div>\r\n            filter: <input value={searchField} onChange={handleChange} />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default Filter","const Notification = ({ message, type }) => {\r\n    console.log(\"Notif\" + message)\r\n    console.log(\"Notif\" + type)\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    \r\n    if(type === 'success'){\r\n        return (\r\n            <div className=\"success\">\r\n              {message}\r\n            </div>\r\n        )\r\n    }else if(type === 'error'){\r\n        return (\r\n            <div className=\"error\">\r\n              {message}\r\n            </div>\r\n          )\r\n    }\r\n\r\n    return null\r\n    \r\n  }\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst exportObj = { getAll, create, update, remove };\r\n\r\nexport default exportObj;","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  // Controls form input\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchField, setSearchField ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ messageType, setMessageType ] = useState(null)\n\n  // Set initial persons array by fetching from server\n  const getPersonsFromDB = () => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(personsData => {\n        console.log('before')\n        setPersons(personsData)\n        console.log('after')\n      })\n      .catch(error => {\n        console.log('Failed to extract data due to network error')\n      })\n  }\n\n  useEffect(getPersonsFromDB, []) // Run the effect only during first render(hence [] array)\n\n  const processMessage = (msg, msgType, error=null) => {\n    console.log(msgType)\n    if(msgType === 'success'){\n      setMessage(msg);\n    }else if(msgType === 'error'){\n      const errorMessage = error.response.data \n        ? `${msg} due to error: ${error.response.data.error}` \n        : msg\n      console.log(errorMessage)\n      setMessage(msg);\n    }\n    setMessageType(msgType);\n    setTimeout(() => {\n      setMessage(null)\n      setMessageType(null)\n    }, 4000)\n  }\n\n  const filteredPersons = persons.filter(person => \n    person.name.toLowerCase().includes(searchField.toLowerCase()))\n\n  const addPerson = (event) => {\n    event.preventDefault()    // Prevent default action of submitting form and reloading\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      // date: new Date().toISOString(),\n      // important: Math.random() < 0.5,\n      id: persons.length + 1,\n    }\n    const index = persons.map(person => person.name).indexOf(newName);\n    console.log(index)\n    if(index > -1){ // Already exists so update\n      updatePerson(personObject, index);\n    }else{ // Index is -1 which means does not exist\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          // Add newly added person to current state\n          processMessage(`Added ${newName}`, 'success')\n          setPersons(persons.concat(returnedPerson)) // Append to persons array by creating copy\n        })\n        .catch(error => {\n          processMessage(`Failed to add ${newName}`, 'error', error)\n        })\n      \n    }\n    setNewName('')  // Reset value of controlled input\n    setNewNumber('')\n  }\n\n  const updatePerson = (updatedPerson, index) => {\n    const personObj = persons[index];\n    window.confirm(`${updatedPerson.name} is already added to the phonebook, replace the old number with a new one?`)\n    personService\n    .update(personObj.id, updatedPerson)\n    .then(returnedPerson => {\n      processMessage(`Updated ${personObj.name}`, 'success')\n      setPersons(persons.map(p => p.id === personObj.id\n        ? {...updatedPerson, id: returnedPerson.id }\n        : p\n      ))\n    })\n    .catch(error => {\n      processMessage(`Information of ${personObj.name} has already been removed from server`, 'error', error)\n    })\n  }\n\n\n  const deletePerson = (id, name) => {\n    if(window.confirm(`Delete ${name}?`)){\n      personService\n      .remove(id)\n      .then(() =>  {\n        processMessage(`Deleted ${name}`, 'success')\n        setPersons(persons.filter(p => p.id !== id) )\n      })\n      .catch(error => {\n        processMessage(`Failed to delete ${name}.`, 'error', error)\n      })\n    }\n  }\n\n  // Register person change event\n  const handlePersonChange = (event) => {\n    // console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    // console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  \n  const handleSearchChange = (event) => {\n    // console.log(event.target.value)\n    setSearchField(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={messageType} />\n      <Filter \n        searchField={searchField}\n        handleChange={handleSearchChange}/>\n\n      <h3>add a new</h3>\n      <PersonForm \n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handlePersonChange={handlePersonChange}\n        handleNumberChange={handleNumberChange}\n      />\n      \n      <h3>Numbers</h3>\n      <Persons \n        persons={filteredPersons}\n        removePerson={deletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}